// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        Int     @id @default(autoincrement())
  username  String  @unique
  password  String 
  firstName String  
  lastName  String  
  entries   Entry[]
  monSumm   MonSumm[]
}

model Entry {
  id          Int @id @default(autoincrement())
  title       String?
  description String
  createdAt   DateTime @default(now())
  tags        String[] @default([]) // Stores dream themes (e.g., ["flying", "nightmare"])
  doors       Door[]
  userId      Int
  user        User  @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum DoorType {
  MIND
  SPIRIT
  ACTION
}

model Door {
    id          Int @id @default(autoincrement())
    type        DoorType
    description String
    createdAt DateTime @default(now())
    entryId     Int
    entry     Entry @relation(fields: [entryId], references: [id], onDelete: Cascade)
}

model MonSumm { // monthly summary
  id          Int @id @default(autoincrement())
  description String
  createdAt DateTime @default(now())
  tags        String[] @default([]) // most seen entry tags for that month
  userId      Int
  user        User  @relation(fields: [userId], references: [id], onDelete: Cascade)
}